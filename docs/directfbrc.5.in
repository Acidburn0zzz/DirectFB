.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" This man page is Copyright (C) 2002 Sven Neumann <neo@directfb.org>

.TH DIRECTFBRC 5 "23 May 2002" "Version @DIRECTFB_VERSION@" "DirectFB Manual Pages"

.SH NAME
directfbrc \- DirectFB configuration file


.SH DESCRIPTION

The
.B directfbrc
file is a configuration file read by all DirectFB applications on startup.
There are two of these: a system-wide one stored in
.I /etc/directfbrc
and a per-user
.I
\fB$HOME\fP/.directfbrc
which may override system settings.

The same parameters that can be used in the
.B directfbrc
file can also be passed to DirectFB applications on the command-line
by prefixing them with 
.BR --dfb:


.SH SYNTAX

The
.B directfbrc
file contains one parameter per line. Comments are introduced by a
hash sign (#), and continue until the end of the line.  Blank lines
are ignored.


.SH PARAMETERS

The following parameters may be specified in the
.B directfbrc
file:

.TP
.BI fbdev=<device>
Open the given frame buffer device instead of /dev/fb0.

.TP
.BI mode=<width>x<height>
Sets the default screen resolution. If unspecified DirectFB will use
the first mode from
.I /etc/fb.modes
Some frame buffer devices (namely vesafb) don't support mode switches
and can only be used in the resolution that is set on boot time.

.TP
.BI depth=<pixeldepth>
Sets the default pixel depth in bits per pixel. If unspecified
DirectFB will use the depth specified in the first mode from
.I /etc/fb.modes
DirectFB supports color depths of 15, 16, 24 and 32 (support for 8 bit
can optionally be compiled in as well). What values are available for
you depends on the frame buffer device you are using. Some frame
buffer devices (namely vesafb) don't support mode switches at all and
can only be used in the pixel depth that is set on boot time.

.TP
.BI quiet
Suppresses console output from DirectFB. Only error messages will be
displayed.

.TP
.BI [no-]banner
Enables/disables the output of the DirectFB banner at startup.

.TP
.BI [no-]debug
Enables/disables debug output. You won't see any debug output unless
you compiled DirectFB with debugging support.

.TP
.BI force-windowed
Forces the primary surface to be a window. This allows to run
applications that were written to do fullscreen access in a window.

.TP
.BI [no-]hardware
Turns hardware acceleration on or off. If you disable hardware
acceleration, the driver for your graphics card will not be loaded and
all graphics operations will be performed by the software renderer.

.TP
.BI [no-]sync
Flushes all disk buffers before initialising DirectFB. This can be
useful if you working with experimental device drivers and expect
crashes.

.TP
.BI [no-]mmx
Allows to disable the use of MMX routines even if support for MMX was
detected.

.TP
.BI [no-]argb-font
Instead of using A8 surfaces (alpha masks), load glyphs into ARGB
surfaces. This uses more memory but some graphics cards do weird
things with A8 surfaces. Try this option if your fonts look strange.

.TP
.BI [no-]sighandler
By default DirectFB installs a signal handler for a number of signals
that cause an application to exit. This signal handler tries to
deinitialize the DirectFB engine before quitting the application.
Use this option to enable/disable this feature.

.TP
.BI dont-catch=<num>[[,<num>]...]
As described with the
.B
sighandler
option, DirectFB installs a signal handler for a number of signals.
By using this option you may specify a list of signals that shouldn't
be handled this way.

.TP
.BI [no-]deinit-check
By default DirectFB checks if the application has released all allocated
resources on exit. If it didn't, it will clean up after the application.
This option allows to switch this feature on or off.

.TP
.BI [no-]vt-switch
Allocate/switch to a new VT.

.TP
.BI [no-]vt-switching
Allow Ctrl+Alt+<F?> (EXPERIMENTAL).

.TP
.BI [no-]graphics-vt
Put terminal into graphics mode.

.TP
.BI [no-]motion-compression
Enables/Disables mouse motion event compression.

.TP
.BI mouse-protocol=<protocol>
Specifies the mouse protocol to use for a serial mouse. The following
protocols are supported: 

.BI MS
Two button mouse using the Microsoft mouse protocol.

.BI MS3
Three button mouse using an extended Microsoft mouse protocol.

.BI MouseMan
Three button mouse using a different extension to the Microsoft mouse
protocol introduced by Logitech.

.BI MouseSystems
The most commonly used protocol for three button mice.

The different protocols for serial mice are described in more details
in mouse(4).

.TP
.BI [no-]lefty
Swaps left and right mouse buttons. Useful for left-handers.

.TP
.BI [no-]cursor
By default DirectFB shows a mouse cursor when an applications make use
of windows. This options allows to switch the cursor off. Note that
applications may nevertheless switch it on explicitely.

.TP
.BI bg-none
Completely disables background handling. Doesn't make much sense since
your mouse and moving windows will leave ugly traces.

.TP
.BI bg-color=AARRGGBB
Controls the color of the background. The color is specified in
hexadecimal notation.

.TP
.BI bg-image=<filename>
Fills the background with the given image file. The image is stretched to
fit to the screen dimensions.

.TP
.BI bg-tile=<filename>
Like
.B bg-image
but tiles the image to fit to the screen dimensions instead of
stretching it.

.TP
.BI [no-]translucent-windows
By default DirectFB windows may be translucent. If you disable this
feature, windows are forced to be either fully opaque or fully
transparent. This is useful if your graphics card doesn't support
alpha-transparent blits.

.TP
.BI videoram-limit=<amount>
Limits the amount of Video RAM used by DirectFB. The amount of Video
RAM is specified in Kilobytes.

.TP
.BI [no-]matrox-sgram
Some older Matrox G400 cards have SGRAM and a number of graphics
operations are considerably faster on these cards if this feature
is enabled. Don't try to enable it if your card doesn't have SGRAM!

.TP
.BI fbdebug=<device>
Allows to specify a second frame buffer device that is used to display
how surface memory is located in the video card. This is highly
experimental and only useful for debugging.

.TP
.BI window-surface-policy=<policy>
Allows to control where window surfaces are stored. Supported values
for <policy> are:

.BI auto
DirectFB decides depending on hardware.

.BI videohigh
Swapping system/video with high priority.

.BI videolow
Swapping system/video with low priority.

.BI systemonly
Window surface is always stored in system memory.

.BI videoonly
Window surface is always stored in video memory.

.TP
.BI desktop-buffer-mode=<mode>
Allows to control the desktop buffer mode. Supported values for <mode>
are:

.BI auto
DirectFB decides depending on hardware.

.BI backvideo
Front and back buffer are video only.

.BI backsystem
Back buffer is system only.

.BI frontonly
There is no back buffer.

.TP
.BI vsync-after
Wait for the vertical retrace after flipping.

.TP
.BI vsync-none
Disable polling for vertical retrace.


.SH EXAMPLES

Here are some examples that demonstrates how the parameters described
above are passed to DirectFB application on the command-line.

.TP
.B df_neo --dfb:no-hardware
Starts df_neo without hardware acceleration.
.TP
.B df_neo --dfb:help
Lists the DirectFB options that can be passed to df_neo.


.SH OTHER INFO

The canonical place to find informations about DirectFB is at
http://www.directfb.org/.  Here you can find the FAQ, tutorials,
mailing list archives, the CVS tree and can download the latest
version of the DirectFB library as well as a number of applications.


.SH FILES

.TP
.I /etc/directfbrc
system-wide DirectFB configuration file
.TP
.I $HOME/.directfbrc
per-user DirectFB configuration file
.TP
.I /etc/fb.modes
frame buffer modes file


.SH SEE ALSO
.BR fb.modes (5),
.BR fbset (8),
.BR mouse (4)
