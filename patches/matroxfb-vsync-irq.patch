Index: drivers/video/matrox/matroxfb_base.c
===================================================================
RCS file: /cvsroot/kernel-next/drivers/video/matrox/matroxfb_base.c,v
retrieving revision 1.1.1.1
diff -u -r1.1.1.1 matroxfb_base.c
--- drivers/video/matrox/matroxfb_base.c	2001/02/04 18:05:30	1.1.1.1
+++ drivers/video/matrox/matroxfb_base.c	2001/03/04 09:00:01
@@ -96,6 +96,7 @@
 #include "matroxfb_maven.h"
 #include "matroxfb_crtc2.h"
 #include <linux/matroxfb.h>
+#include <linux/irq.h>
 #include <asm/uaccess.h>
 
 #ifdef CONFIG_PPC
@@ -134,7 +135,23 @@
 };
 
 
+/* --------------------------------------------------------------------- */
+
+static int mga_vsync = 0;
+static DECLARE_WAIT_QUEUE_HEAD(vsync_wait);
+
+static void matrox_irq( int irq, void *dummy, struct pt_regs *fp )
+{
+ 	if (mga_inb( M_STATUS ) & 0x10) {
+ 	 	mga_setr( M_CRTC_INDEX, 0x11, ACCESS_FBINFO(currenthw)->CRTC[0x11] & ~0x10 );
+ 	 	mga_setr( M_CRTC_INDEX, 0x11, ACCESS_FBINFO(currenthw)->CRTC[0x11] | 0x10 );
 
+		mga_vsync = 1;
+
+		wake_up_interruptible(&vsync_wait);
+ 	}
+}
+
 /* --------------------------------------------------------------------- */
 
 static void matrox_pan_var(WPMINFO struct fb_var_screeninfo *var) {
@@ -1034,6 +1051,31 @@
 					return -EFAULT;
 				return 0;
 			}
+	        case FBIO_WAITFORVSYNC:
+			{
+				int retval = 0;
+
+				DECLARE_WAITQUEUE(wait, current);
+				add_wait_queue(&vsync_wait, &wait);
+				current->state = TASK_INTERRUPTIBLE;
+		
+				mga_vsync = 0;
+
+				do {
+					if (mga_vsync)
+						break;
+					if (signal_pending(current)) {
+						retval = -ERESTARTSYS;
+						break;
+					}
+					schedule();
+				} while (1);
+
+				current->state = TASK_RUNNING;
+				remove_wait_queue(&vsync_wait, &wait);
+
+				return retval;
+			}
 		case MATROXFB_SET_OUTPUT_MODE:
 			{
 				struct matroxioc_output_mode mom;
@@ -2097,6 +2139,8 @@
 	ACCESS_FBINFO(output.all) = MATROXFB_OUTPUT_CONN_PRIMARY;
 	ACCESS_FBINFO(output.ph) = MATROXFB_OUTPUT_CONN_PRIMARY;
 	ACCESS_FBINFO(output.sh) = 0;
+
+	request_irq(pdev->irq, matrox_irq, SA_SHIRQ, "MGA Vertical Sync", MINFO);
 
 	err = initMatrox2(PMINFO d, b);
 	if (!err) {
Index: drivers/video/matrox/matroxfb_misc.c
===================================================================
RCS file: /cvsroot/kernel-next/drivers/video/matrox/matroxfb_misc.c,v
retrieving revision 1.1.1.1
diff -u -r1.1.1.1 matroxfb_misc.c
--- drivers/video/matrox/matroxfb_misc.c	2000/08/10 19:34:31	1.1.1.1
+++ drivers/video/matrox/matroxfb_misc.c	2001/03/04 09:00:01
@@ -392,7 +392,7 @@
 	for (i = 10; i < 16; i++)
 		hw->CRTC[i] = 0x00;
 	hw->CRTC[16] = vs /* & 0xFF */;
-	hw->CRTC[17] = (ve & 0x0F) | 0x20;
+	hw->CRTC[17] = (ve & 0x0F) | 0x10; /* vsync interrupt enabled! to disable: s/0x10/0x20/ */
 	hw->CRTC[18] = vd /* & 0xFF */;
 	hw->CRTC[19] = wd /* & 0xFF */;
 	hw->CRTC[20] = 0x00;
Index: include/linux/fb.h
===================================================================
RCS file: /cvsroot/kernel-next/include/linux/fb.h,v
retrieving revision 1.1.1.1
diff -u -r1.1.1.1 fb.h
--- include/linux/fb.h	2000/12/11 21:16:53	1.1.1.1
+++ include/linux/fb.h	2001/03/04 09:00:03
@@ -32,6 +32,8 @@
 #define FBIOPUT_MODEINFO        0x4617
 #define FBIOGET_DISPINFO        0x4618
 
+#define FBIO_WAITFORVSYNC       0x4620
+
 
 #define FB_TYPE_PACKED_PIXELS		0	/* Packed Pixels	*/
 #define FB_TYPE_PLANES			1	/* Non interleaved planes */
