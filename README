DirectFB README
---------------

   This is a developers release of DirectFB.

   DirectFB is a graphics library which was designed with embedded systems 
   in mind. It offers maximum hardware accelerated performance at a
   minimum of resource usage and overhead. 

   Check http://www.directfb.org/ for more and uptodate infos.


Build Requirements
------------

   - Linux kernel 2.2.x or newer with working frame buffer device
     (check /proc/fb) for the fbdev system.
   - Optionally SDL (Simple DirectMedia Layer) for the sdl system.

   - freetype (version >= 2.0.1)
   - libjpeg62
   - libpng2 or libpng3
   - zlib

   The build of the image and font providers can be disabled but we
   strongly suggest that you don't do this since the code examples and
   a lot of DirectFB apps depend on the functionality provided by them.

   The video providers require some libraries (avifile, libflash and
   libmpeg3) that are not commonly installed. We have provided packages
   on our web-site at http://www.directfb.org/download/contrib/. If for
   some reason the build of one of the video providers fails, you can
   disable it explicitely. Check the output of 'configure --help'.

   We suggest you also install pkg-config available from
   http://www.freedesktop.org/software/pkgconfig/. It will help you
   to compile applications based on DirectFB.


Usage Requirements
------------------

   Depending on the DirectFB application you want to run, you need some
   or all of these:

   - A working frame buffer device (check the output of 'fbset -i').
   - A keyboard (if it works on the console, everything should be fine).
   - A PS/2 or serial mouse for windowing. USB and ADB mice do also work
     via PS/2 emulation.

   To access the frame buffer device and the mouse you need access to
   /dev/tty0, /dev/fb0 and the mouse device (/dev/psaux, /dev/mouse).
   You can either run all DirectFB applications as root or allow users
   to access these devices. A reasonable way to do this is to add users
   to the group tty (or some other group) and allow this group to read
   and write the files in /dev:

       crw-rw----    1 root     tty       29,   0  /dev/fb0
       crw-rw----    1 root     tty       10,   1  /dev/psaux
       crw-rw----    1 root     tty        4,   0  /dev/tty0


   Some applications from the DirectFB-examples package have additional
   requirements:

   - A video card supported by video4linux for df_video.
   - A joystick for df_joystick.


Recommendations
---------------

   To take full advantage of hardware acceleration, 
   a Matrox G200/G400/G450/G550 graphics card is recommened for this 
   version of DirectFB. The drivers for ATI128, Voodoo 3/4/5/Banshee,
   NeoMagic and S3 Savage cards included with this release are work in
   progress and only yet support a subset of the possible accelerations.


Installation
------------

   1) In the DirectFB directory type:

	./configure
	make
	make install (as superuser)

      Use 'configure --help' to get a list of possible configure options. 

   2) Make sure that /usr/local/lib is listed in your /etc/ld.so.conf.
      If you added it you have to run 'ldconfig' as superuser.

   3) You might want to copy fb.modes to /etc or merge it with your
      existing /etc/fb.modes file. The first entry will be used by
      default - copy other entries you may need.

   4) If you want to use a serial mouse, create a link called /dev/mouse
      that points to serial device (e.g. /dev/ttyS0). Then add a line
      describing your mouse-protocol to /etc/directfbrc or ~/.directfbrc:
      "mouse-protocol=[ms|ms3|mouseman|mousesystems]".

   5) If you are cross compiling and have installed the required libraries
      someplace other than /usr/local/lib be sure to add the bin directory
      for those libraries to the front of your 'PATH'.

        For instance if you configured using:
          --prefix=/dfb/usr/local
        then be sure to
          export PATH=/dfb/usr/local/bin:$PATH
        before compiling and installing.


Configuring DirectFB
--------------------

   There are lots of things that can be configured. We try to ship DirectFB
   with reasonable defaults but you might have to tweak things. There are
   several ways to do this. You may edit the system-wide configuration
   file /etc/directfbrc or the user-specific $HOME/.directfbrc. There's a
   manual page called directfbrc(5) that documents all the settings. The
   same manual page also explains how DirectFB application can be
   configured via the command-line.


Configuring the Linux framebuffer device
----------------------------------------

   DirectFB needs a Linux kernel with framebuffer support. Check the 
   documentation in the kernel tree (/usr/src/linux/Documentation/fb/) on 
   how to enable the framebuffer device for your graphics card. 

   The generic vesa fbdev driver does not support mode switching and you 
   will not get hardware acceleration. To make DirectFB work with veasfb, 
   you should add the following lines to /etc/lilo.conf:

	append="video=vesa:ywrap,mtrr"

   'ywrap' enables panning with wraparound.
   'mtrr' enables setting caching type for the framebuffer to write-combining.

	vga=791

   This sets the mode on startup. 791 means 1024x768@16, 788 means 800x600@16.

   All VESA Video Modes:

   Bits    640x480 800x600 1024x768 1280x1024 1600x1200
   8       769     771     773      775       796
   16      785     788     791      794       798
   32      786     789     792      795       799

   Other framebuffer devices support mode switching. DirectFB will only 
   support modes listed in your /etc/fb.modes file. By default the first 
   entry found is used.

   If you have a Matrox G200/G400 you may try the vsync patch found in
   the patches directory that enables applications to "idle wait" for the
   vertical retrace.


Documentation
-------------

   A complete API reference documentation in HTML format is created during 
   the build in the docs directory. You may also access the API reference
   as well as a concepts overview, tutorials and the FAQ online at
   http://www.directfb.org/documentation/. 


Thanks to
---------

   Johannes Zellner <johannes@zellner.org>
   Till Adam <till@adam-lilienthal.de>
   Joachim Steiger <roh@hyte.de>
   Felix von Leitner <leitner@fefe.de>
   Johannes Stezenbach <js@convergence.de>
   Michael Natterer <mitch@convergence.de>
   Holger Waechtler <holger@convergence.de>
   Kim JeongHoe <king@mizi.com>
   Jason Gaiser <jasno@san.rr.com>
   W. Michael Petullo <mike@flyn.org>
   Jiri Svoboda <Jiri.Svoboda@seznam.cz>
   Hallvar Helleseth <hallvar@ii.uib.no>
   Topi Kanerva <topi.kanerva@eke.fi>
   Daniel Mack <daniel@convergence.de>
   Ara Hacopian <ahacop@anthrotronix.com>
   Mike Haertel <mike@albert.ai.mit.edu>
   Enno Brehm <enno@convergence.de>
   Martin Mueller <mm@convergence.de>
   Sebastian Klemke <packet@convergence.de>
   Fredrik Hallenberg <hallon@lysator.liu.se>
   Antonino Daplas <adaplas@users.sourceforge.net>
   Scott A McConnell <samcconn@cotw.com>
   Alex SONG <zzaleson@uqconnect.net>
   Ville Syrjala <syrjala@sci.fi>
   Brian J. Murrell <a40e8119bbddbe7b3d281db117f19b32@interlinx.bc.ca>
   Tim Janik <timj@gtk.org>
   Billy Biggs <vektor@dumbterm.net>


Legal stuff
-----------

   (c) Copyright 2000-2002  convergence integrated media GmbH.
   (c) Copyright 2002       convergence GmbH.
   All rights reserved.

   Written by Denis Oliver Kropp <dok@directfb.org> and
              Andreas Hundt <andi@fischlustig.de> and
              Sven Neumann <neo@directfb.org>.

   This library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2 of the License, or (at your option) any later version.

   The complete text of the license is found in the file COPYING. 
